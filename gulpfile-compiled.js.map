{"version":3,"sources":["gulpfile.js"],"names":[],"mappings":"AAAA,IAAI,OAAY,QAAQ,MAAR,CAAhB;AAAA,IAAiC;AAC7B,OAAc,QAAQ,WAAR,CADlB;AAAA,IACwC;AACpC,UAAc,QAAQ,cAAR,CAFlB;AAAA,IAE2C;AACvC,SAAc,QAAQ,aAAR,CAHlB;AAAA,IAG0C;AACtC,cAAc,QAAQ,cAAR,CAJlB;AAAA,IAI2C;AACvC,MAAc,QAAQ,KAAR,CALlB;AAAA,IAKkC;AAC9B,WAAc,QAAQ,eAAR,CANlB;AAAA,IAM4C;AACxC,WAAc,QAAQ,mBAAR,CAPlB;AAAA,IAOgD;AAC5C,QAAc,QAAQ,YAAR,CARlB;AAAA,IAQyC;AACrC,eAAe,QAAQ,mBAAR,CATnB;AAAA,IASgD;AAC5C,QAAQ,QAAQ,YAAR,CAVZ;;AAYA,KAAK,IAAL,CAAU,SAAV,EAAqB,CAAC,OAAD,CAArB;AACA,KAAK,IAAL,CAAU,OAAV,EAAmB,YAAY;AAC3B,WAAO,MAAM,QAAN,EAAP;AACH,CAFD;;AAIA,KAAK,IAAL,CAAU,MAAV,EAAkB,YAAU;AAAE;AAC1B,WAAO,KAAK,GAAL,CAAS,oBAAT,EAA+B;AAA/B,KACF,IADE,CACG,MADH,EACW;AADX,KAEF,IAFE,CAEG,aAAa,CAAC,kBAAD,EAAqB,MAArB,EAA6B,MAA7B,EAAqC,MAArC,CAAb,EAA2D,EAAE,SAAS,IAAX,EAA3D,CAFH,EAEkF;AAFlF,KAGF,IAHE,CAGG,KAAK,IAAL,CAAU,SAAV,CAHH,EAGyB;AAHzB,KAIF,IAJE,CAIG,YAAY,MAAZ,CAAmB,EAAC,QAAQ,IAAT,EAAnB,CAJH,CAAP,CADwB,CAKsB;AACjD,CAND;;AAQA,KAAK,IAAL,CAAU,cAAV,EAA0B,YAAW;AAAE;AACnC,gBAAY,EAAE;AACV,gBAAQ,EAAE;AACN,qBAAS,KADL,CACW;AADX,SADA;AAIR,iBAAS,CAAC,QAAD,CAJD;AAKR,gBAAQ,KALA,CAKK;;AALL,KAAZ;AAQH,CATD;;AAWA,KAAK,IAAL,CAAU,UAAV,EAAsB,CAAC,MAAD,CAAtB,EAAgC,YAAW;AACvC,WAAO,KAAK,GAAL,CAAS,kBAAT,EAA6B;AAA7B,KACF,IADE,CACG,SADH,EACc;AADd,KAEF,IAFE,CAEG,OAAO,EAAC,QAAQ,MAAT,EAAP,CAFH,EAE6B;AAF7B,KAGF,IAHE,CAGG,KAAK,IAAL,CAAU,SAAV,CAHH,CAAP,CADuC,CAIN;AACpC,CALD;;AAQA;;AAEA,KAAK,IAAL,CAAU,OAAV,EAAmB,CAAC,cAAD,EAAgB,MAAhB,CAAnB,EAA4C,YAAW;AACnD,SAAK,KAAL,CAAW,oBAAX,EAAiC,CAAC,MAAD,CAAjC,EADmD,CACP;AAC5C,SAAK,KAAL,CAAW,aAAX,EAA0B,YAAY,MAAtC,EAFmD,CAEJ;AAC/C,SAAK,KAAL,CAAW,YAAX,EAAyB,YAAY,MAArC,EAHmD,CAGL;AACjD,CAJD;;AAMA,KAAK,IAAL,CAAU,OAAV,EAAmB,YAAW;AAC1B,WAAO,IAAI,IAAJ,CAAS,MAAT,CAAP,CAD0B,CACD;AAC5B,CAFD;;AAIA,KAAK,IAAL,CAAU,KAAV,EAAiB,YAAW;AACxB,WAAO,KAAK,GAAL,CAAS,cAAT,EAAyB;AAAzB,KACF,IADE,CACG,MAAM,SAAS,EAAG;AACpB,oBAAY,IADK;AAEjB,qBAAa,IAFI;AAGjB,qBAAa,CAAC,EAAC,eAAe,KAAhB,EAAD,CAHI;AAIjB,aAAK,CAAC,UAAD;AAJY,KAAT,CAAN,CADH,EAOF,IAPE,CAOG,KAAK,IAAL,CAAU,UAAV,CAPH,CAAP,CADwB,CAQU;AACrC,CATD;;AAWA,KAAK,IAAL,CAAU,OAAV,EAAmB,CAAC,OAAD,EAAU,KAAV,EAAiB,MAAjB,CAAnB,EAA6C,YAAW;;AAEpD,QAAI,WAAW,KAAK,GAAL,CAAS,CAAE;AACtB,sBADoB,EAEpB,sBAFoB,CAAT,EAIV,IAJU,CAIL,KAAK,IAAL,CAAU,UAAV,CAJK,CAAf;;AAMA,QAAI,aAAa,KAAK,GAAL,CAAS,gBAAT,EAA2B;AAA3B,KACZ,IADY,CACP,KAAK,IAAL,CAAU,YAAV,CADO,CAAjB;;AAGA,QAAI,YAAY,KAAK,GAAL,CAAS,YAAT,EAAuB;AAAvB,KACX,IADW,CACN,KAAK,IAAL,CAAU,MAAV,CADM,CAAhB;AAGH,CAdD","file":"gulpfile-compiled.js","sourcesContent":["var gulp      = require('gulp'), // Подключаем Gulp\r\n    sass        = require('gulp-sass'), //Подключаем Sass пакет,\r\n    cssnano     = require('gulp-cssnano'), // Подключаем пакет для минификации CSS\r\n    rename      = require('gulp-rename'), // Подключаем библиотеку для переименования файлов\r\n    browserSync = require('browser-sync'), // Подключаем Browser Sync\r\n    del         = require('del'), // Подключаем библиотеку для удаления файлов и папок\r\n    imagemin    = require('gulp-imagemin'), // Подключаем библиотеку для работы с изображениями\r\n    pngquant    = require('imagemin-pngquant'), // Подключаем библиотеку для работы с png\r\n    cache       = require('gulp-cache'), // Подключаем библиотеку кеширования\r\n    autoprefixer = require('gulp-autoprefixer'),// Подключаем библиотеку для автоматического добавления префиксов\r\n    babel = require('gulp-babel');\r\n\r\ngulp.task('default', ['watch']);\r\ngulp.task('clear', function () {\r\n    return cache.clearAll();\r\n})\r\n\r\ngulp.task('sass', function(){ // Создаем таск Sass\r\n    return gulp.src('app/sass/**/*.scss') // Берем источник\r\n        .pipe(sass()) // Преобразуем Sass в CSS посредством gulp-sass\r\n        .pipe(autoprefixer(['last 15 versions', '> 1%', 'ie 8', 'ie 7'], { cascade: true })) // Создаем префиксы\r\n        .pipe(gulp.dest('app/css')) // Выгружаем результата в папку app/css\r\n        .pipe(browserSync.reload({stream: true})) // Обновляем CSS на странице при изменении\r\n});\r\n\r\ngulp.task('browser-sync', function() { // Создаем таск browser-sync\r\n    browserSync({ // Выполняем browserSync\r\n        server: { // Определяем параметры сервера\r\n            baseDir: 'app' // Директория для сервера - app\r\n        },\r\n        browser: [\"chrome\"],\r\n        notify: false// Отключаем уведомления\r\n\r\n    });\r\n});\r\n\r\ngulp.task('css-libs', ['sass'], function() {\r\n    return gulp.src('app/css/**/*.css') // Выбираем файл для минификации\r\n        .pipe(cssnano()) // Сжимаем\r\n        .pipe(rename({suffix: '.min'})) // Добавляем суффикс .min\r\n        .pipe(gulp.dest('app/css')); // Выгружаем в папку app/css\r\n});\r\n\r\n\r\n//убрал с watch сss-libs!!!\r\n\r\ngulp.task('watch', ['browser-sync','sass'], function() {\r\n    gulp.watch('app/sass/**/*.scss', ['sass']); // Наблюдение за sass файлами в папке sass\r\n    gulp.watch('app/js/*.js', browserSync.reload); // Наблюдение за js файлами в папке js\r\n    gulp.watch('app/*.html', browserSync.reload); // Наблюдение за HTML файлами в корне проекта\r\n});\r\n\r\ngulp.task('clean', function() {\r\n    return del.sync('dist'); // Удаляем папку dist перед сборкой\r\n});\r\n\r\ngulp.task('img', function() {\r\n    return gulp.src('app/img/**/*') // Берем все изображения из app\r\n        .pipe(cache(imagemin({  // Сжимаем их с наилучшими настройками с учетом кеширования\r\n            interlaced: true,\r\n            progressive: true,\r\n            svgoPlugins: [{removeViewBox: false}],\r\n            use: [pngquant()]\r\n        })))\r\n        .pipe(gulp.dest('dist/img')); // Выгружаем на продакшен\r\n});\r\n\r\ngulp.task('build', ['clean', 'img', 'sass'], function() {\r\n\r\n    var buildCss = gulp.src([ // Переносим библиотеки в продакшен\r\n        'app/css/main.css',\r\n        'app/css/libs.min.css'\r\n    ])\r\n        .pipe(gulp.dest('dist/css'))\r\n\r\n    var buildFonts = gulp.src('app/fonts/**/*') // Переносим шрифты в продакшен\r\n        .pipe(gulp.dest('dist/fonts'))\r\n\r\n    var buildHtml = gulp.src('app/*.html') // Переносим HTML в продакшен\r\n        .pipe(gulp.dest('dist'));\r\n\r\n});\r\n\r\n\r\n"]}